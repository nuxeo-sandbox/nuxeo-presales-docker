version: '3.8'
services:
  nuxeo:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - "INSTALL_RPM=${INSTALL_RPM}"
        - "NUXEO_CLID=${NUXEO_CLID}"
    env_file:
      - ./.env
    image: presales-nuxeo-${PROJECT_NAME}
    hostname: nuxeo
    restart: unless-stopped
    depends_on:
      - mongo
      - elasticsearch
    expose:
      # Webservice Port
      - 8080
      # Port for Debugging (JPDA)
      - 8787
      # JMX port
      - 1089
    ports:
      - "${NUXEO_PORT}:8080"
      - "8787:8787"
      - "1089:1089"
    volumes:
      - ./init:/docker-entrypoint-initnuxeo.d/:rw
      - ./conf:/etc/nuxeo/conf.d/:ro
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /usr/bin/docker:/usr/bin/docker:ro
      - nuxeo-data:/var/lib/nuxeo:rw
      - nuxeo-stream:/opt/nuxeo/server/stream:rw
      # Optional, makes container startup faster after the first time
      # - ./nuxeo_store:/opt/nuxeo/server/packages/store
      # Makes things pretty slow, uncomment with caution; useful for debugging
      # - ./nuxeo_war:/opt/nuxeo/server/nxserver/nuxeo.war:rw
  mongo:
    image: mongo:${MONGO_VERSION}
    hostname: mongo
    restart: unless-stopped
    healthcheck:
      test: echo 'db.stats().ok' | mongo mongo:27017/test --quiet
      interval: 1m
      timeout: 30s
      retries: 10
      start_period: 15s
    expose:
      # Mongo connection
      - 27017
    # Uncomment the following block if you require host-level access to MongoDB
    #ports:
    #  - "27017:27017"
    volumes:
      - mongo-data:/data/db
  elasticsearch:
    build:
      context: .
      dockerfile: es/Dockerfile
      args:
        - "ELASTIC_VERSION=${ELASTIC_VERSION}"
    env_file:
      - ./.env
    image: presales-elasticsearch-${PROJECT_NAME}
    hostname: elasticsearch
    restart: unless-stopped
    healthcheck:
      test: curl -f http://elasticsearch:9200/
      interval: 2m
      timeout: 30s
      retries: 10
      start_period: 1m
    environment:
      - discovery.type=single-node
      - cluster.name=elasticsearch
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    expose:
      - 9200
      - 9300
    # Uncomment the following block if you require host-level access to ElasticSearch
    #ports:
    #  - 9200:9200
    #  - 9300:9300
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - es-data:/usr/share/elasticsearch/data
  kibana:
    image: docker.elastic.co/kibana/kibana-oss:${ELASTIC_VERSION}
    hostname: kibana
    restart: unless-stopped
    healthcheck:
      test: curl -f http://kibana:5601/kibana/app/kibana
      interval: 2m
      timeout: 30s
      retries: 10
      start_period: 2m
    depends_on:
      - elasticsearch
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200/
      SERVER_BASEPATH: /kibana
      SERVER_REWRITEBASEPATH: 'true'
    expose:
      - 5601
    ports:
      - "5601:5601"
    volumes:
      - kibana-data:/usr/share/kibana/data
volumes:
  es-data:
  kibana-data:
  nuxeo-data:
  nuxeo-stream:
  mongo-data:
